name: Auto Tag with Semantic Versioning

on:
  push:
    branches:
      - main
      - master
      - develop
      - 'feature/*'    # Add support for feature branches
      - 'release/*'    # Handle release branches
      - 'rc/*'         # Handle release candidate branches

jobs:
  versioning:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
    - name: Checkout code
      uses: actions/checkout@v2

      # Set up .NET
    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0'  # You can use a newer version depending on your project

      # Install GitVersion.Tool (ensure it gets installed correctly)
    - name: Install GitVersion.Tool
      run: |
        # Install GitVersion globally using the .NET CLI
        dotnet tool install --global GitVersion.Tool

        # Add the tool to the PATH (so it can be found by subsequent steps)
        echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

        # Verify that the installation worked by printing the version
        dotnet-gitversion -version  # This should print the version of the GitVersion tool

      # Run GitVersion to get the version number
    - name: Run GitVersion
      id: gitversion
      run: |
        # Ensure that git fetch was successful
        git fetch --tags || exit 1

        # Now, attempt to get the version
        VERSION=$(dotnet-gitversion /showvariable FullSemVer) || exit 1
        echo "Version: $VERSION"

        # Save the version to the environment
        echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Modify version for alpha, beta, rc, or feature tags based on branch
    - name: Adjust Version for Pre-release or Feature
      id: adjust_version
      run: |
        BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
        VERSION=${{ env.VERSION }}

        # Check for alpha, beta, rc, or feature tags
        if [[ "$BRANCH_NAME" == "develop" ]]; then
          VERSION="${VERSION}-alpha.${GITHUB_RUN_NUMBER}"
        elif [[ "$BRANCH_NAME" == "release/"* ]]; then
          VERSION="${VERSION}-beta.${GITHUB_RUN_NUMBER}"
        elif [[ "$BRANCH_NAME" == "rc/"* ]]; then
          VERSION="${VERSION}-rc.${GITHUB_RUN_NUMBER}"
        elif [[ "$BRANCH_NAME" == feature/* ]]; then
          # For feature branches, append the branch name and a number to the version
          FEATURE_NAME=$(echo $BRANCH_NAME | sed 's/feature\///')  # Remove 'feature/' prefix
          VERSION="${VERSION}-feature${FEATURE_NAME}.${GITHUB_RUN_NUMBER}"
        fi

        echo "Pre-release version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Create a Git tag with the version
    - name: Create Git Tag
      run: |
        git tag $VERSION
        git push origin $VERSION

      # Optionally: Create a GitHub Release (if required)
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: build_output.zip  # Change this to the files you want to attach to the release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
